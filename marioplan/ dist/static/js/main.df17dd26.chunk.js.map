{"version":3,"sources":["UI/Navbar/SignedInLinks.js","Store/Actions/authActions.js","UI/Navbar/SignedOutLinks.js","UI/Navbar/Navbar.js","Views/Project/ProjectFields.js","Views/Dashboard/ProjectList.js","Views/Dashboard/Notifications.js","Views/Dashboard/Dashboard.js","Views/Project/ProjectDetails.js","Views/Authentication/SignIn.js","Views/Authentication/SignUp.js","Views/Project/CreateProject.js","Store/Actions/projectActions.js","App.js","serviceWorker.js","Store/Reducers/projectReducer.js","Store/Reducers/authReducer.js","Store/Reducers/rootReducer.js","Config/firebaseConfig.js","index.js"],"names":["connect","dispatch","logOut","getState","getFirebase","auth","signOut","then","type","props","className","to","onClick","userProfile","initials","SignedOutLinks","storeState","loggedUser","firebase","uid","profile","ProjectFields","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","id","key","Notifications","notifications","item","user","content","time","fromNow","Dashboard","this","Component","compose","state","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","firebaseProject","projectID","match","params","project_id","data","find","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","React","authzRed","credentials","signInWithEmailAndPassword","catch","error","SignUp","firstname","lastname","signUp","history","push","signUpError","newUser","getFirestore","createUserWithEmailAndPassword","response","doc","set","firstName","lastName","CreateProject","projectTitle","projectContent","createProject","name","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","projectReducer","action","console","log","authReducer","message","rootReducer","combineReducers","projectRed","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","appStore","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","firebaseInstance","useFirestoreForProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.df17dd26.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { logOut } from '../../Store/Actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n    return(\r\n        <ul className='right'>\r\n            <li><NavLink to='/create'>New Project</NavLink></li>\r\n            <li><a onClick={props.logOut}>Log Out</a></li>\r\n            <li><NavLink to='/' className='btn btn-floating green lighten-1'>{props.userProfile.initials}</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        logOut: () => dispatch(logOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n        \r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        )\r\n        .then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' })\r\n        })\r\n        .catch(error => {\r\n            dispatch({ type: 'LOGIN_ERROR', error: error })\r\n        })\r\n    }\r\n}\r\n\r\nexport const logOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut()\r\n        .then(() => {\r\n            dispatch({ type: 'LOGOUT_SUCCESS'})\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return ( dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        )\r\n        .then(response => {\r\n            return firestore.collection('users').doc(response.user.uid).set({\r\n                firstName: newUser.firstname,\r\n                lastName: newUser.lastname,\r\n                initials: newUser.firstname[0] + newUser.lastname[0]\r\n            })\r\n            .then(() => {\r\n                dispatch({ type: 'SIGNUP_SUCCESS' });\r\n            })\r\n        })\r\n        .catch(error => {\r\n            dispatch({ type: 'SIGNUP_ERROR', error: error })\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n    return(\r\n        <ul className='right'>\r\n            <li><NavLink to='/signin'>Log In</NavLink></li>\r\n            <li><NavLink to='/signup'>Sign Up</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\n\r\n// Component Imports\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\n\r\n// Routing imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// Redux imports\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n\r\n    //const loggedUser = props.loggedUser;\r\n    //const userProfile = props.profile;\r\n    const { loggedUser, userProfile } = props;\r\n    return(\r\n        <nav className='nav-wrapper grey darken-3'>\r\n            <div className='container'>\r\n                <Link to='/' className='brand-logo'>MarioPlan</Link>\r\n                { loggedUser ? <SignedInLinks userProfile={userProfile} /> : <SignedOutLinks /> }\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (storeState) => {\r\n    return{\r\n        loggedUser: storeState.firebase.auth.uid,\r\n        userProfile: storeState.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment'\r\n\r\nconst ProjectFields = ({project}) => {\r\n    return(\r\n        <div className='card z-depth-0 project-summary'>\r\n            <div className='card-content darken-3'>\r\n                <span className='card-title'> {project.title } </span>\r\n                <p className='grey-text'>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className='grey-text'>on {moment(project.createdAt.toDate()).calendar() }</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProjectFields;","import React from 'react'\r\nimport ProjectFields from '../Project/ProjectFields'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({ projects }) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {projects && projects.map(project => {\r\n                return (\r\n                    <Link to={'/project/' + project.id} key={project.id}>\r\n                        <ProjectFields project={project} />\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n    const { notifications } = props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"online-users\">\r\n                        {notifications && notifications.map(item => {\r\n                            return <li key={item.id}>\r\n                                <span className=\"pink-text\">{item.user} </span>\r\n                                <span>{item.content}</span>\r\n                                <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\r\n                            </li>\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React, { Component } from 'react'\r\nimport ProjectList from '../Dashboard/ProjectList'\r\nimport Notifications from './Notifications'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\r\n  ])\r\n)(Dashboard)","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\n// Redux imports\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\n\r\n// Firebase imports\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\n\r\nconst ProjectDetails = (props) => {\r\n    const loggedUser = props.loggedUser\r\n    if(loggedUser){\r\n        let firebaseProject = props.project\r\n        if(firebaseProject){\r\n            return (\r\n                <div className='project-details container section'>\r\n                    <div className='card z-depth-0'>\r\n                        <div className='card-content'>\r\n                            <span className='card-title'>{ firebaseProject.title }</span>\r\n                            <p>{ firebaseProject.content }</p>\r\n                        </div>\r\n                        <div className='card-action grey-text'>\r\n                            <p>Posted by { firebaseProject.authorFirstName }, { firebaseProject.authorLastName }</p>\r\n                            <p>Posted on {moment(firebaseProject.createdAt.toDate()).calendar()}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div className='container section'>\r\n                    <p>Loading post...</p>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    else{\r\n        return (\r\n            <Redirect to='/signin' />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (storeState, ownProps) => {\r\n    let firebaseProject = null;\r\n    let projectID = ownProps.match.params.project_id\r\n\r\n    if(storeState.firestore.data.projects){\r\n        firebaseProject = storeState.firestore.ordered.projects.find(project => {\r\n            return project.id === projectID\r\n        })\r\n\r\n    }\r\n\r\n    return{\r\n        project: firebaseProject,\r\n        loggedUser: storeState.firebase.auth.uid\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects'}\r\n    ])\r\n)(ProjectDetails);","import React from 'react';\r\n\r\n// Redux imports\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../Store/Actions/authActions'\r\n\r\nclass SignIn extends React.Component{\r\n\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n        [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state)\r\n  }\r\n  \r\n  render(){\r\n    const authError = this.props.authError\r\n\r\n    return (\r\n        <div className=\"sign-in container\">\r\n            <form className='white' onSubmit={this.handleSubmit}>\r\n                <h5 className='grey-text darken-4'>Sign In</h5>\r\n                <div className='input-field'>\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" id='email' onChange={this.handleChange}/>\r\n                </div>\r\n                <div className='input-field'>\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" id='password' onChange={this.handleChange}/>\r\n                </div>\r\n                <div className='input-field'>\r\n                    <button className='btn pink lighten-1 z-depth-1'>Submit</button>\r\n                    <div className='red-text center'>\r\n                      { authError ? <p>Login Failed</p> : null }\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState) => {\r\n  return {\r\n    authError: storeState.authzRed.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    signIn: (credentials) => dispatch(signIn(credentials))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../Store/Actions/authActions'\r\n\r\nclass SignUp extends React.Component{\r\n\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstname: '',\r\n    lastname: ''\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n        [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n    this.props.history.push('/')\r\n  }\r\n  \r\n  render(){\r\n    const { signUpError } = this.props;\r\n    return (\r\n        <div className=\"sign-up container\">\r\n            <form className='white' onSubmit={this.handleSubmit}>\r\n                <h5 className='grey-text darken-4'>Sign Up</h5>\r\n                <div className='input-field'>\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" id='email' onChange={this.handleChange}/>\r\n                </div>\r\n                <div className='input-field'>\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" id='password' onChange={this.handleChange}/>\r\n                </div>\r\n                <div className='input-field'>\r\n                    <label htmlFor=\"firstname\">First Name</label>\r\n                    <input type=\"text\" id='firstname' onChange={this.handleChange}/>\r\n                </div>\r\n                <div className='input-field'>\r\n                    <label htmlFor=\"lastname\">Last Name</label>\r\n                    <input type=\"text\" id='lastname' onChange={this.handleChange}/>\r\n                </div>\r\n                <div className='input-field center'>\r\n                    <button className='btn pink lighten-1 z-depth-1'>Submit</button>\r\n                    <div className='red-text'>\r\n                      { signUpError ? <p> {signUpError} </p> : null}\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState) => {\r\n  return{\r\n    signUpError: storeState.authzRed.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    signUp: (newUser) => dispatch(signUp(newUser))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n// Redux imports\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../Store/Actions/projectActions'\r\n\r\nclass CreateProject extends React.Component{\r\n\r\n  state = {\r\n    projectTitle: '',\r\n    projectContent: ''\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n        [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/')\r\n  }\r\n  \r\n  render(){\r\n    const { loggedUser } = this.props;\r\n    if(loggedUser){\r\n      return (\r\n          <div className=\"create-project container\">\r\n              <form className='white' onSubmit={this.handleSubmit}>\r\n                  <h5 className='grey-text darken-4'>New Project</h5>\r\n                  <div className='input-field'>\r\n                      <label htmlFor=\"projectTitle\">Project Title</label>\r\n                      <input type=\"text\" id='projectTitle' onChange={this.handleChange}/>\r\n                  </div>\r\n                  <div className='input-field'>\r\n                      <label htmlFor=\"projectContent\">Project Content</label>\r\n                      <textarea name=\"projectContent\" id=\"projectContent\" className='materialize-textarea' onChange={this.handleChange}></textarea>\r\n                  </div>\r\n                  <div className='input-field'>\r\n                      <button className='btn pink lighten-1 z-depth-1'>Create Project</button>\r\n                  </div>\r\n              </form>\r\n          </div>\r\n      );\r\n    }\r\n    else {\r\n      return(\r\n        <Redirect to='/signin' />\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState) => {\r\n  return {\r\n    loggedUser: storeState.firebase.auth.uid\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","export const createProject = (project) => {\r\n    return ( dispatch, getState, { getFirebase, getFirestore } ) => {\r\n        // Asyncronous call here.\r\n        const firestore = getFirestore();\r\n        const state = getState();\r\n\r\n        firestore.collection('projects').add({\r\n            title: project.projectTitle,\r\n            content: project.projectContent,\r\n            authorFirstName: state.firebase.profile.firstName,\r\n            authorLastName: state.firebase.profile.lastName,\r\n            createdAt: new Date()\r\n        })\r\n        .then(() => {\r\n            // Triggering the action\r\n            dispatch({ type: 'CREATE_PROJECT', project: { project } })\r\n\r\n        })\r\n        .catch( error => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', error: { error } })\r\n        })\r\n    }\r\n}","import React from 'react';\r\n\r\n// Component Imports\r\nimport Navbar from './UI/Navbar/Navbar'\r\nimport Dashboard from './Views/Dashboard/Dashboard'\r\nimport ProjectDetails from './Views/Project/ProjectDetails'\r\nimport SignIn from './Views/Authentication/SignIn'\r\nimport SignUp from './Views/Authentication/SignUp'\r\nimport CreateProject from './Views/Project/CreateProject'\r\n\r\n// Routing Imports\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <Navbar />\r\n        <Switch>\r\n            <Route exact path='/' component={Dashboard} />\r\n            <Route path='/project/:project_id' component={ProjectDetails} />\r\n            <Route path='/signin' component={SignIn} />\r\n            <Route path='/signup' component={SignUp} />\r\n            <Route path='/create' component={CreateProject} />\r\n\r\n        </Switch>\r\n      </div>  \r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initState = {\r\n    projects: [\r\n        { id: '1', title: 'Title 1', content:'Content 1' },\r\n        { id: '2', title: 'Title 2', content:'Content 2' },\r\n        { id: '3', title: 'Title 3', content:'Content 3' }\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        default:\r\n            return state;\r\n        case 'CREATE_PROJECT':\r\n            // Project created into the database.\r\n            console.log('Project created', action.project );\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            // Project created into the database.\r\n            console.log('Error while creating project', action.error );\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default projectReducer;","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_SUCCESS':  \r\n            console.log('Login success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n    \r\n        case 'LOGIN_ERROR':\r\n            console.log(\"Login failed\")\r\n            return {\r\n                ...state,\r\n                authError: 'Login Failed'\r\n            }\r\n        \r\n        case 'LOGOUT_SUCCESS':\r\n            console.log('Logged out')\r\n            return state;\r\n\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('Signup success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n            \r\n        case 'SIGNUP_ERROR':\r\n            console.log('Signup error')\r\n            return {\r\n                ...state,\r\n                authError: action.error.message\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","// Component Imports\r\nimport projectReducer from './projectReducer'\r\nimport authReducer from './authReducer'\r\n\r\n// Redux Imports\r\nimport { combineReducers } from 'redux'\r\n\r\n// Firestore imports\r\nimport { firestoreReducer } from 'redux-firestore'\r\n\r\n// Firebase imports\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    projectRed: projectReducer, \r\n    authzRed: authReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","    /* eslint-disable */ \r\n  import firebase from 'firebase/app';\r\n  import firestore from 'firebase/firestore';\r\n  import auth from 'firebase/auth';\r\n\r\n  // Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyCgG_NzIo0ONgF8Qjgb0wNWsIFxmNB7qhY\",\r\n    authDomain: \"react-marioplan-c15b3.firebaseapp.com\",\r\n    databaseURL: \"https://react-marioplan-c15b3.firebaseio.com\",\r\n    projectId: \"react-marioplan-c15b3\",\r\n    storageBucket: \"react-marioplan-c15b3.appspot.com\",\r\n    messagingSenderId: \"262466844970\",\r\n    appId: \"1:262466844970:web:03e02ec8e973949695c653\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export default firebase;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// Redux imports\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './Store/Reducers/rootReducer'\r\n\r\n// Thunk imports\r\nimport thunk from 'redux-thunk'\r\n\r\n// Firebase imports\r\nimport firebaseInstance from './Config/firebaseConfig'\r\nimport { getFirebase, reactReduxFirebase } from 'react-redux-firebase'\r\nimport { getFirestore, reduxFirestore } from 'redux-firestore'\r\n\r\nconst appStore = createStore(rootReducer, \r\n    compose(\r\n        applyMiddleware(thunk.withExtraArgument( { getFirebase, getFirestore })),\r\n        reactReduxFirebase(firebaseInstance, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true }),\r\n        reduxFirestore(firebaseInstance)\r\n    )\r\n);\r\n\r\nappStore.firebaseAuthIsReady.then(() => {\r\n    ReactDOM.render(<Provider store={appStore}><App /></Provider>, document.getElementById('root'));\r\n\r\n})\r\n//ReactDOM.render(<Provider store={ appStore }><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}